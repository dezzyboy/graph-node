version: '3'
services:
  nginx:
    image: nginx:1.21.0-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - graph-node
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/cert:/etc/letsencrypt:ro
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: graph-node-hide
      postgres_pass: let-me-in-then-hide
      postgres_db: graph-node-hide
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:https://1rpc.io/eth godwoken:no_eip1898,archive,traces:https://v1.mainnet.godwoken.io/rpc meter:https://rpc.meter.io/'
      GRAPH_LOG: info
      GRAPH_GETH_ETH_CALL_ERRORS: 'revert'
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node-hide
      POSTGRES_PASSWORD: let-me-in-then-hide
      POSTGRES_DB: graph-node-hide
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
